local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (3==v29) then function v36()local v43=v35();local v44=v35();local v45=932 -(857 + 74) ;local v46=(v32(v44,1,20) * (2^32)) + v43 ;local v47=v32(v44,21,31);local v48=((v32(v44,600 -(367 + 201) )==1) and  -(928 -(214 + 713))) or 1 ;if (v47==(0 + 0)) then if (v46==(0 + 0)) then return v48 * (877 -(282 + 595)) ;else local v100=0;while true do if (v100==0) then v47=1;v45=0;break;end end end elseif (v47==2047) then return ((v46==0) and (v48 * (1/0))) or (v48 * NaN) ;end return v16(v48,v47-1023 ) * (v45 + (v46/(2^52))) ;end v37=nil;function v37(v49)local v50=0;local v51;local v52;while true do if (v50==1) then v51=v11(v27,v30,(v30 + v49) -(1638 -(1523 + 114)) );v30=v30 + v49 ;v50=2;end if (2==v50) then v52={};for v101=1, #v51 do v52[v101]=v10(v9(v11(v51,v101,v101)));end v50=3;end if (v50==0) then v51=nil;if  not v49 then local v118=0;while true do if (v118==0) then v49=v35();if (v49==0) then return "";end break;end end end v50=1;end if (3==v50) then return v14(v52);end end end v38=v35;v29=4;end if (v29==1) then function v32(v53,v54,v55)if v55 then local v90=0;local v91;while true do if (0==v90) then v91=(v53/(2^(v54-1)))%(2^(((v55-(2 -1)) -(v54-(1 -0))) + 1)) ;return v91-(v91%1) ;end end else local v92=0;local v93;while true do if (0==v92) then v93=2^(v54-(2 -1)) ;return (((v53%(v93 + v93))>=v93) and 1) or 0 ;end end end end v33=nil;function v33()local v56=0;local v57;while true do if (v56==1) then return v57;end if (v56==0) then v57=v9(v27,v30,v30);v30=v30 + 1 ;v56=1;end end end v34=nil;v29=2;end if (v29==0) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\204\50","\81\226\28\125\167\115\181\226"),function(v58)if (v9(v58,2)==79) then local v94=0;while true do if (v94==0) then v31=v8(v11(v58,1,1));return "";end end else local v95=0;local v96;while true do if (v95==0) then v96=v10(v8(v58,49 -33 ));if v31 then local v125=0;local v126;while true do if (v125==0) then v126=v13(v96,v31);v31=nil;v125=1;end if (v125==1) then return v126;end end else return v96;end break;end end end end);v32=nil;v29=1;end if (5==v29) then v41=nil;function v41(v59,v60,v61)local v62=0;local v63;local v64;local v65;while true do if (v62==0) then v63=v59[1];v64=v59[2];v62=1;end if (v62==1) then v65=v59[120 -(32 + 85) ];return function(...)local v103=v63;local v104=v64;local v105=v65;local v106=v39;local v107=1;local v108= -1;local v109={};local v110={...};local v111=v20("#",...) -1 ;local v112={};local v113={};for v119=0,v111 do if (v119>=v105) then v109[v119-v105 ]=v110[v119 + 1 + 0 ];else v113[v119]=v110[v119 + 1 ];end end local v114=(v111-v105) + 1 ;local v115;local v116;while true do local v120=0;while true do if (v120==1) then if (v116<=40) then if (v116<=19) then if (v116<=(2 + 7)) then if (v116<=4) then if (v116<=1) then if (v116>0) then if (v113[v115[959 -(892 + 65) ]]==v115[4]) then v107=v107 + 1 ;else v107=v115[7 -4 ];end else local v146=0;local v147;while true do if (v146==0) then v147=v115[2];v113[v147](v113[v147 + 1 ]);break;end end end elseif (v116<=2) then v113[v115[2]]=v41(v104[v115[3]],nil,v61);elseif (v116>3) then local v233=v115[2];local v234,v235=v106(v113[v233](v21(v113,v233 + 1 ,v108)));v108=(v235 + v233) -(1 -0) ;local v236=0;for v301=v233,v108 do local v302=0;while true do if (v302==0) then v236=v236 + 1 ;v113[v301]=v234[v236];break;end end end elseif (v115[2]==v113[v115[4]]) then v107=v107 + 1 ;else v107=v115[3];end elseif (v116<=6) then if (v116==5) then v113[v115[2]]();else local v149=0;local v150;local v151;while true do if (v149==1) then v113[v150 + 1 ]=v151;v113[v150]=v151[v115[7 -3 ]];break;end if (0==v149) then v150=v115[2];v151=v113[v115[3]];v149=1;end end end elseif (v116<=7) then if v113[v115[2]] then v107=v107 + (351 -(87 + 263)) ;else v107=v115[183 -(67 + 113) ];end elseif (v116>8) then v113[v115[2]]=v115[3] + v113[v115[4]] ;else v113[v115[2]][v113[v115[3]]]=v115[4];end elseif (v116<=14) then if (v116<=11) then if (v116==(8 + 2)) then do return v113[v115[2]]();end else local v152=0;local v153;while true do if (v152==0) then v153=v115[4 -2 ];v113[v153]=v113[v153](v21(v113,v153 + 1 ,v108));break;end end end elseif (v116<=12) then if v113[v115[2]] then v107=v107 + 1 + 0 ;else v107=v115[3];end elseif (v116==13) then v113[v115[2]]=v113[v115[11 -8 ]] + v115[4] ;else v113[v115[2]]=v61[v115[3]];end elseif (v116<=16) then if (v116>15) then v61[v115[955 -(802 + 150) ]]=v113[v115[2]];else local v156=0;local v157;while true do if (v156==0) then v157=v115[2];v113[v157]=v113[v157](v21(v113,v157 + 1 ,v115[3]));break;end end end elseif (v116<=17) then local v158=0;local v159;local v160;local v161;while true do if (v158==2) then if (v160>0) then if (v161<=v113[v159 + 1 ]) then local v389=0;while true do if (v389==0) then v107=v115[3];v113[v159 + 3 ]=v161;break;end end end elseif (v161>=v113[v159 + 1 ]) then local v390=0;while true do if (0==v390) then v107=v115[3];v113[v159 + 3 ]=v161;break;end end end break;end if (v158==1) then v161=v113[v159] + v160 ;v113[v159]=v161;v158=2;end if (v158==0) then v159=v115[2];v160=v113[v159 + (5 -3) ];v158=1;end end elseif (v116>(32 -14)) then local v245=v115[2];local v246,v247=v106(v113[v245](v113[v245 + 1 ]));v108=(v247 + v245) -1 ;local v248=0;for v315=v245,v108 do local v316=0;while true do if (v316==0) then v248=v248 + 1 ;v113[v315]=v246[v248];break;end end end else local v249=v115[2];v113[v249](v21(v113,v249 + 1 ,v108));end elseif (v116<=29) then if (v116<=24) then if (v116<=(16 + 5)) then if (v116==20) then local v162=v115[2];local v163=v113[v162 + 2 ];local v164=v113[v162] + v163 ;v113[v162]=v164;if (v163>0) then if (v164<=v113[v162 + 1 ]) then local v340=0;while true do if (v340==0) then v107=v115[1000 -(915 + 82) ];v113[v162 + (8 -5) ]=v164;break;end end end elseif (v164>=v113[v162 + 1 ]) then local v341=0;while true do if (v341==0) then v107=v115[3];v113[v162 + 3 ]=v164;break;end end end else v113[v115[2]]=v113[v115[3]]%v115[3 + 1 ] ;end elseif (v116<=(28 -6)) then do return;end elseif (v116>23) then v113[v115[2]]=v113[v115[3]];else for v317=v115[2],v115[3] do v113[v317]=nil;end end elseif (v116<=(1213 -(1069 + 118))) then if (v116>25) then v113[v115[2]]= #v113[v115[3]];else v107=v115[3];end elseif (v116<=27) then local v169=0;local v170;local v171;local v172;while true do if (1==v169) then v172=v113[v170 + 2 ];if (v172>0) then if (v171>v113[v170 + 1 ]) then v107=v115[3];else v113[v170 + 3 ]=v171;end elseif (v171<v113[v170 + 1 ]) then v107=v115[3];else v113[v170 + (6 -3) ]=v171;end break;end if (v169==0) then v170=v115[4 -2 ];v171=v113[v170];v169=1;end end elseif (v116>28) then v113[v115[1 + 1 ]]=v61[v115[3]];else v107=v115[3];end elseif (v116<=34) then if (v116<=(54 -23)) then if (v116==30) then if (v113[v115[2]]==v115[4]) then v107=v107 + 1 ;else v107=v115[3];end else local v173=v115[2];v113[v173]=v113[v173]();end elseif (v116<=32) then local v175=0;local v176;while true do if (v175==0) then v176=v115[2];v113[v176](v21(v113,v176 + 1 + 0 ,v108));break;end end elseif (v116>33) then v113[v115[2]]=v115[3] + v113[v115[4]] ;else v113[v115[2]]=v113[v115[3]]%v115[4] ;end elseif (v116<=37) then if (v116<=35) then local v177=v115[2];local v178=v113[v177];for v229=v177 + 1 ,v108 do v15(v178,v113[v229]);end elseif (v116==36) then local v258=v115[2];local v259=v113[v115[3]];v113[v258 + (792 -(368 + 423)) ]=v259;v113[v258]=v259[v115[4]];else local v263=v115[2];do return v21(v113,v263,v108);end end elseif (v116<=38) then local v179=0;local v180;while true do if (v179==0) then v180=v115[2];v113[v180]=v113[v180](v21(v113,v180 + (3 -2) ,v108));break;end end elseif (v116>39) then local v264=0;local v265;while true do if (v264==0) then v265=v115[2];do return v113[v265](v21(v113,v265 + 1 ,v115[3]));end break;end end else local v266=0;local v267;local v268;local v269;local v270;while true do if (v266==2) then for v384=v267,v108 do local v385=0;while true do if (v385==0) then v270=v270 + 1 ;v113[v384]=v268[v270];break;end end end break;end if (0==v266) then v267=v115[2];v268,v269=v106(v113[v267](v21(v113,v267 + 1 ,v108)));v266=1;end if (v266==1) then v108=(v269 + v267) -1 ;v270=0;v266=2;end end end elseif (v116<=60) then if (v116<=50) then if (v116<=45) then if (v116<=42) then if (v116==(59 -(10 + 8))) then v113[v115[2]]= #v113[v115[3]];else local v182=0;local v183;local v184;local v185;local v186;while true do if (0==v182) then v183=v115[2];v184,v185=v106(v113[v183](v21(v113,v183 + 1 ,v115[3])));v182=1;end if (2==v182) then for v342=v183,v108 do local v343=0;while true do if (v343==0) then v186=v186 + 1 ;v113[v342]=v184[v186];break;end end end break;end if (v182==1) then v108=(v185 + v183) -1 ;v186=0;v182=2;end end end elseif (v116<=(165 -122)) then v113[v115[2]][v113[v115[3]]]=v115[4];elseif (v116==44) then v113[v115[2]][v113[v115[3]]]=v113[v115[4]];else v113[v115[2]]=v113[v115[3]];end elseif (v116<=47) then if (v116==46) then local v189=0;local v190;local v191;local v192;local v193;while true do if (v189==2) then for v344=v190,v108 do v193=v193 + 1 ;v113[v344]=v191[v193];end break;end if (v189==0) then v190=v115[2];v191,v192=v106(v113[v190](v21(v113,v190 + (443 -(416 + 26)) ,v115[3])));v189=1;end if (v189==1) then v108=(v192 + v190) -1 ;v193=0;v189=2;end end else v113[v115[2]]=v115[3];end elseif (v116<=48) then v113[v115[2]]=v113[v115[3]][v115[4]];elseif (v116==(156 -107)) then local v275=v115[2];v113[v275](v113[v275 + 1 + 0 ]);elseif  not v113[v115[2]] then v107=v107 + 1 ;else v107=v115[3];end elseif (v116<=55) then if (v116<=52) then if (v116==51) then v113[v115[2]]=v113[v115[3]]%v113[v115[4]] ;else v113[v115[2]]=v113[v115[3]] + v115[4] ;end elseif (v116<=53) then local v200=0;local v201;while true do if (v200==0) then v201=v115[2];v113[v201]=v113[v201](v21(v113,v201 + 1 ,v115[3]));break;end end elseif (v116>54) then v113[v115[2]][v115[3]]=v115[4];elseif (v115[2]==v113[v115[4]]) then v107=v107 + (1 -0) ;else v107=v115[3];end elseif (v116<=57) then if (v116>56) then v113[v115[2]][v115[3]]=v115[4];else local v204=0;local v205;local v206;local v207;while true do if (v204==0) then v205=v104[v115[441 -(145 + 293) ]];v206=nil;v204=1;end if (v204==2) then for v349=1,v115[434 -(44 + 386) ] do local v350=0;local v351;while true do if (v350==1) then if (v351[1]==24) then v207[v349-1 ]={v113,v351[3]};else v207[v349-1 ]={v60,v351[3]};end v112[ #v112 + 1 ]=v207;break;end if (v350==0) then v107=v107 + 1 ;v351=v103[v107];v350=1;end end end v113[v115[1 + 1 ]]=v41(v205,v206,v61);break;end if (v204==1) then v207={};v206=v18({},{[v7("\200\249\235\44\227\89\242","\138\151\166\130\66\135\60")]=function(v352,v353)local v354=0;local v355;while true do if (v354==0) then v355=v207[v353];return v355[1][v355[2]];end end end,[v7("\6\15\74\116\46\57\74\117\60\40","\17\89\80\36")]=function(v356,v357,v358)local v359=0;local v360;while true do if (v359==0) then v360=v207[v357];v360[1][v360[2]]=v358;break;end end end});v204=2;end end end elseif (v116<=58) then v113[v115[2]][v113[v115[3]]]=v113[v115[4]];elseif (v116>59) then v113[v115[2]]=v60[v115[3]];else v113[v115[2]]=v113[v115[3]]%v113[v115[4 + 0 ]] ;end elseif (v116<=70) then if (v116<=65) then if (v116<=62) then if (v116>61) then v113[v115[2]]();else v113[v115[2]]=v113[v115[3]][v115[4]];end elseif (v116<=63) then for v230=v115[2],v115[3] do v113[v230]=nil;end elseif (v116>64) then local v281=0;local v282;local v283;while true do if (1==v281) then for v386=v282 + 1 ,v108 do v15(v283,v113[v386]);end break;end if (v281==0) then v282=v115[2];v283=v113[v282];v281=1;end end else v113[v115[774 -(201 + 571) ]][v115[3]]=v113[v115[4]];end elseif (v116<=67) then if (v116>66) then local v212=0;local v213;while true do if (v212==0) then v213=v115[2];v113[v213]=v113[v213]();break;end end else v113[v115[2]]=v115[3];end elseif (v116<=68) then local v216=0;local v217;while true do if (0==v216) then v217=v115[2];do return v113[v217](v21(v113,v217 + 1 ,v115[3]));end break;end end elseif (v116>(1207 -(116 + 1022))) then do return;end else local v286=v115[2];local v287,v288=v106(v113[v286](v113[v286 + 1 ]));v108=(v288 + v286) -(4 -3) ;local v289=0;for v334=v286,v108 do local v335=0;while true do if (v335==0) then v289=v289 + 1 + 0 ;v113[v334]=v287[v289];break;end end end end elseif (v116<=75) then if (v116<=72) then if (v116==71) then local v218=0;local v219;while true do if (v218==0) then v219=v115[2];do return v21(v113,v219,v108);end break;end end else local v220=0;local v221;local v222;local v223;while true do if (v220==2) then for v361=1,v115[4] do local v362=0;local v363;while true do if (v362==0) then v107=v107 + 1 ;v363=v103[v107];v362=1;end if (1==v362) then if (v363[3 -2 ]==(85 -61)) then v223[v361-1 ]={v113,v363[3]};else v223[v361-1 ]={v60,v363[3]};end v112[ #v112 + 1 ]=v223;break;end end end v113[v115[2]]=v41(v221,v222,v61);break;end if (v220==1) then v223={};v222=v18({},{[v7("\74\69\115\192\113\127\98","\174\21\26\26")]=function(v364,v365)local v366=v223[v365];return v366[1][v366[2]];end,[v7("\8\158\186\21\32\168\186\20\50\185","\112\87\193\212")]=function(v367,v368,v369)local v370=v223[v368];v370[1][v370[2]]=v369;end});v220=2;end if (v220==0) then v221=v104[v115[3]];v222=nil;v220=1;end end end elseif (v116<=73) then do return v113[v115[2]]();end elseif (v116==74) then v113[v115[2]][v115[3]]=v113[v115[4]];else v61[v115[3]]=v113[v115[2]];end elseif (v116<=78) then if (v116<=76) then v113[v115[2]]=v60[v115[3]];elseif (v116==77) then v113[v115[4 -2 ]]=v41(v104[v115[3]],nil,v61);else local v295=0;local v296;local v297;local v298;while true do if (v295==1) then v298=v113[v296 + 2 ];if (v298>0) then if (v297>v113[v296 + 1 ]) then v107=v115[3];else v113[v296 + 2 + 1 ]=v297;end elseif (v297<v113[v296 + 1 ]) then v107=v115[3];else v113[v296 + 3 ]=v297;end break;end if (v295==0) then v296=v115[1 + 1 ];v297=v113[v296];v295=1;end end end elseif (v116<=79) then v113[v115[2]]={};elseif (v116>80) then if  not v113[v115[2]] then v107=v107 + 1 ;else v107=v115[888 -(261 + 624) ];end else v113[v115[3 -1 ]]={};end v107=v107 + (1081 -(1020 + 60)) ;break;end if (v120==0) then v115=v103[v107];v116=v115[1];v120=1;end end end end;end end end return v41(v40(),{},v28)(...);end if (2==v29) then function v34()local v66=0;local v67;local v68;while true do if (1==v66) then return (v68 * 256) + v67 ;end if (v66==0) then v67,v68=v9(v27,v30,v30 + 2 );v30=v30 + 2 ;v66=1;end end end v35=nil;function v35()local v69=0;local v70;local v71;local v72;local v73;while true do if (v69==0) then v70,v71,v72,v73=v9(v27,v30,v30 + (622 -(555 + 64)) );v30=v30 + 4 ;v69=1;end if (v69==1) then return (v73 * 16777216) + (v72 * 65536) + (v71 * 256) + v70 ;end end end v36=nil;v29=3;end if (v29==4) then v39=nil;function v39(...)return {...},v20("#",...);end v40=nil;function v40()local v74={};local v75={};local v76={};local v77={v74,v75,nil,v76};local v78=v35();local v79={};for v81=1,v78 do local v82=0;local v83;local v84;while true do if (v82==1) then if (v83==1) then v84=v33()~=0 ;elseif (v83==2) then v84=v36();elseif (v83==3) then v84=v37();end v79[v81]=v84;break;end if (v82==0) then v83=v33();v84=nil;v82=1;end end end v77[3 -0 ]=v33();for v85=1,v35() do local v86=0;local v87;while true do if (v86==0) then v87=v33();if (v32(v87,1066 -(68 + 997) ,1)==0) then local v121=0;local v122;local v123;local v124;while true do if (v121==1) then v124={v34(),v34(),nil,nil};if (v122==0) then local v134=0;while true do if (v134==0) then v124[3]=v34();v124[4]=v34();break;end end elseif (v122==1) then v124[3]=v35();elseif (v122==2) then v124[3]=v35() -(2^16) ;elseif (v122==3) then local v145=0;while true do if (v145==0) then v124[3]=v35() -(2^16) ;v124[1274 -(226 + 1044) ]=v34();break;end end end v121=2;end if (v121==2) then if (v32(v123,1,1)==1) then v124[2]=v79[v124[2]];end if (v32(v123,2,2)==1) then v124[3]=v79[v124[3]];end v121=3;end if (v121==3) then if (v32(v123,3,3)==1) then v124[17 -13 ]=v79[v124[4]];end v74[v85]=v124;break;end if (0==v121) then v122=v32(v87,2,3);v123=v32(v87,4,6);v121=1;end end end break;end end end for v88=1,v35() do v75[v88-1 ]=v40();end return v77;end v29=5;end end end vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.9.15) ~  Much Love, Ferib 

]]--


